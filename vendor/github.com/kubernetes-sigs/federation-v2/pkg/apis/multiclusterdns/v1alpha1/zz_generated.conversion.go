// +build !ignore_autogenerated

/*
Copyright 2018 The Kubernetes Authors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// This file was autogenerated by conversion-gen. Do not edit it manually!

package v1alpha1

import (
	multiclusterdns "github.com/kubernetes-sigs/federation-v2/pkg/apis/multiclusterdns"
	conversion "k8s.io/apimachinery/pkg/conversion"
	runtime "k8s.io/apimachinery/pkg/runtime"
	unsafe "unsafe"
)

func init() {
	localSchemeBuilder.Register(RegisterConversions)
}

// RegisterConversions adds conversion functions to the given scheme.
// Public to allow building arbitrary schemes.
func RegisterConversions(scheme *runtime.Scheme) error {
	return scheme.AddGeneratedConversionFuncs(
		Convert_v1alpha1_ClusterDNS_To_multiclusterdns_ClusterDNS,
		Convert_multiclusterdns_ClusterDNS_To_v1alpha1_ClusterDNS,
		Convert_v1alpha1_MultiClusterServiceDNSRecord_To_multiclusterdns_MultiClusterServiceDNSRecord,
		Convert_multiclusterdns_MultiClusterServiceDNSRecord_To_v1alpha1_MultiClusterServiceDNSRecord,
		Convert_v1alpha1_MultiClusterServiceDNSRecordList_To_multiclusterdns_MultiClusterServiceDNSRecordList,
		Convert_multiclusterdns_MultiClusterServiceDNSRecordList_To_v1alpha1_MultiClusterServiceDNSRecordList,
		Convert_v1alpha1_MultiClusterServiceDNSRecordSpec_To_multiclusterdns_MultiClusterServiceDNSRecordSpec,
		Convert_multiclusterdns_MultiClusterServiceDNSRecordSpec_To_v1alpha1_MultiClusterServiceDNSRecordSpec,
		Convert_v1alpha1_MultiClusterServiceDNSRecordStatus_To_multiclusterdns_MultiClusterServiceDNSRecordStatus,
		Convert_multiclusterdns_MultiClusterServiceDNSRecordStatus_To_v1alpha1_MultiClusterServiceDNSRecordStatus,
		Convert_v1alpha1_MultiClusterServiceDNSRecordStatusStrategy_To_multiclusterdns_MultiClusterServiceDNSRecordStatusStrategy,
		Convert_multiclusterdns_MultiClusterServiceDNSRecordStatusStrategy_To_v1alpha1_MultiClusterServiceDNSRecordStatusStrategy,
		Convert_v1alpha1_MultiClusterServiceDNSRecordStrategy_To_multiclusterdns_MultiClusterServiceDNSRecordStrategy,
		Convert_multiclusterdns_MultiClusterServiceDNSRecordStrategy_To_v1alpha1_MultiClusterServiceDNSRecordStrategy,
	)
}

func autoConvert_v1alpha1_ClusterDNS_To_multiclusterdns_ClusterDNS(in *ClusterDNS, out *multiclusterdns.ClusterDNS, s conversion.Scope) error {
	out.Cluster = in.Cluster
	out.LoadBalancer = in.LoadBalancer
	out.Zone = in.Zone
	out.Region = in.Region
	return nil
}

// Convert_v1alpha1_ClusterDNS_To_multiclusterdns_ClusterDNS is an autogenerated conversion function.
func Convert_v1alpha1_ClusterDNS_To_multiclusterdns_ClusterDNS(in *ClusterDNS, out *multiclusterdns.ClusterDNS, s conversion.Scope) error {
	return autoConvert_v1alpha1_ClusterDNS_To_multiclusterdns_ClusterDNS(in, out, s)
}

func autoConvert_multiclusterdns_ClusterDNS_To_v1alpha1_ClusterDNS(in *multiclusterdns.ClusterDNS, out *ClusterDNS, s conversion.Scope) error {
	out.Cluster = in.Cluster
	out.LoadBalancer = in.LoadBalancer
	out.Zone = in.Zone
	out.Region = in.Region
	return nil
}

// Convert_multiclusterdns_ClusterDNS_To_v1alpha1_ClusterDNS is an autogenerated conversion function.
func Convert_multiclusterdns_ClusterDNS_To_v1alpha1_ClusterDNS(in *multiclusterdns.ClusterDNS, out *ClusterDNS, s conversion.Scope) error {
	return autoConvert_multiclusterdns_ClusterDNS_To_v1alpha1_ClusterDNS(in, out, s)
}

func autoConvert_v1alpha1_MultiClusterServiceDNSRecord_To_multiclusterdns_MultiClusterServiceDNSRecord(in *MultiClusterServiceDNSRecord, out *multiclusterdns.MultiClusterServiceDNSRecord, s conversion.Scope) error {
	out.ObjectMeta = in.ObjectMeta
	if err := Convert_v1alpha1_MultiClusterServiceDNSRecordSpec_To_multiclusterdns_MultiClusterServiceDNSRecordSpec(&in.Spec, &out.Spec, s); err != nil {
		return err
	}
	if err := Convert_v1alpha1_MultiClusterServiceDNSRecordStatus_To_multiclusterdns_MultiClusterServiceDNSRecordStatus(&in.Status, &out.Status, s); err != nil {
		return err
	}
	return nil
}

// Convert_v1alpha1_MultiClusterServiceDNSRecord_To_multiclusterdns_MultiClusterServiceDNSRecord is an autogenerated conversion function.
func Convert_v1alpha1_MultiClusterServiceDNSRecord_To_multiclusterdns_MultiClusterServiceDNSRecord(in *MultiClusterServiceDNSRecord, out *multiclusterdns.MultiClusterServiceDNSRecord, s conversion.Scope) error {
	return autoConvert_v1alpha1_MultiClusterServiceDNSRecord_To_multiclusterdns_MultiClusterServiceDNSRecord(in, out, s)
}

func autoConvert_multiclusterdns_MultiClusterServiceDNSRecord_To_v1alpha1_MultiClusterServiceDNSRecord(in *multiclusterdns.MultiClusterServiceDNSRecord, out *MultiClusterServiceDNSRecord, s conversion.Scope) error {
	out.ObjectMeta = in.ObjectMeta
	if err := Convert_multiclusterdns_MultiClusterServiceDNSRecordSpec_To_v1alpha1_MultiClusterServiceDNSRecordSpec(&in.Spec, &out.Spec, s); err != nil {
		return err
	}
	if err := Convert_multiclusterdns_MultiClusterServiceDNSRecordStatus_To_v1alpha1_MultiClusterServiceDNSRecordStatus(&in.Status, &out.Status, s); err != nil {
		return err
	}
	return nil
}

// Convert_multiclusterdns_MultiClusterServiceDNSRecord_To_v1alpha1_MultiClusterServiceDNSRecord is an autogenerated conversion function.
func Convert_multiclusterdns_MultiClusterServiceDNSRecord_To_v1alpha1_MultiClusterServiceDNSRecord(in *multiclusterdns.MultiClusterServiceDNSRecord, out *MultiClusterServiceDNSRecord, s conversion.Scope) error {
	return autoConvert_multiclusterdns_MultiClusterServiceDNSRecord_To_v1alpha1_MultiClusterServiceDNSRecord(in, out, s)
}

func autoConvert_v1alpha1_MultiClusterServiceDNSRecordList_To_multiclusterdns_MultiClusterServiceDNSRecordList(in *MultiClusterServiceDNSRecordList, out *multiclusterdns.MultiClusterServiceDNSRecordList, s conversion.Scope) error {
	out.ListMeta = in.ListMeta
	out.Items = *(*[]multiclusterdns.MultiClusterServiceDNSRecord)(unsafe.Pointer(&in.Items))
	return nil
}

// Convert_v1alpha1_MultiClusterServiceDNSRecordList_To_multiclusterdns_MultiClusterServiceDNSRecordList is an autogenerated conversion function.
func Convert_v1alpha1_MultiClusterServiceDNSRecordList_To_multiclusterdns_MultiClusterServiceDNSRecordList(in *MultiClusterServiceDNSRecordList, out *multiclusterdns.MultiClusterServiceDNSRecordList, s conversion.Scope) error {
	return autoConvert_v1alpha1_MultiClusterServiceDNSRecordList_To_multiclusterdns_MultiClusterServiceDNSRecordList(in, out, s)
}

func autoConvert_multiclusterdns_MultiClusterServiceDNSRecordList_To_v1alpha1_MultiClusterServiceDNSRecordList(in *multiclusterdns.MultiClusterServiceDNSRecordList, out *MultiClusterServiceDNSRecordList, s conversion.Scope) error {
	out.ListMeta = in.ListMeta
	out.Items = *(*[]MultiClusterServiceDNSRecord)(unsafe.Pointer(&in.Items))
	return nil
}

// Convert_multiclusterdns_MultiClusterServiceDNSRecordList_To_v1alpha1_MultiClusterServiceDNSRecordList is an autogenerated conversion function.
func Convert_multiclusterdns_MultiClusterServiceDNSRecordList_To_v1alpha1_MultiClusterServiceDNSRecordList(in *multiclusterdns.MultiClusterServiceDNSRecordList, out *MultiClusterServiceDNSRecordList, s conversion.Scope) error {
	return autoConvert_multiclusterdns_MultiClusterServiceDNSRecordList_To_v1alpha1_MultiClusterServiceDNSRecordList(in, out, s)
}

func autoConvert_v1alpha1_MultiClusterServiceDNSRecordSpec_To_multiclusterdns_MultiClusterServiceDNSRecordSpec(in *MultiClusterServiceDNSRecordSpec, out *multiclusterdns.MultiClusterServiceDNSRecordSpec, s conversion.Scope) error {
	out.FederationName = in.FederationName
	out.DNSSuffix = in.DNSSuffix
	return nil
}

// Convert_v1alpha1_MultiClusterServiceDNSRecordSpec_To_multiclusterdns_MultiClusterServiceDNSRecordSpec is an autogenerated conversion function.
func Convert_v1alpha1_MultiClusterServiceDNSRecordSpec_To_multiclusterdns_MultiClusterServiceDNSRecordSpec(in *MultiClusterServiceDNSRecordSpec, out *multiclusterdns.MultiClusterServiceDNSRecordSpec, s conversion.Scope) error {
	return autoConvert_v1alpha1_MultiClusterServiceDNSRecordSpec_To_multiclusterdns_MultiClusterServiceDNSRecordSpec(in, out, s)
}

func autoConvert_multiclusterdns_MultiClusterServiceDNSRecordSpec_To_v1alpha1_MultiClusterServiceDNSRecordSpec(in *multiclusterdns.MultiClusterServiceDNSRecordSpec, out *MultiClusterServiceDNSRecordSpec, s conversion.Scope) error {
	out.FederationName = in.FederationName
	out.DNSSuffix = in.DNSSuffix
	return nil
}

// Convert_multiclusterdns_MultiClusterServiceDNSRecordSpec_To_v1alpha1_MultiClusterServiceDNSRecordSpec is an autogenerated conversion function.
func Convert_multiclusterdns_MultiClusterServiceDNSRecordSpec_To_v1alpha1_MultiClusterServiceDNSRecordSpec(in *multiclusterdns.MultiClusterServiceDNSRecordSpec, out *MultiClusterServiceDNSRecordSpec, s conversion.Scope) error {
	return autoConvert_multiclusterdns_MultiClusterServiceDNSRecordSpec_To_v1alpha1_MultiClusterServiceDNSRecordSpec(in, out, s)
}

func autoConvert_v1alpha1_MultiClusterServiceDNSRecordStatus_To_multiclusterdns_MultiClusterServiceDNSRecordStatus(in *MultiClusterServiceDNSRecordStatus, out *multiclusterdns.MultiClusterServiceDNSRecordStatus, s conversion.Scope) error {
	out.DNS = *(*[]multiclusterdns.ClusterDNS)(unsafe.Pointer(&in.DNS))
	return nil
}

// Convert_v1alpha1_MultiClusterServiceDNSRecordStatus_To_multiclusterdns_MultiClusterServiceDNSRecordStatus is an autogenerated conversion function.
func Convert_v1alpha1_MultiClusterServiceDNSRecordStatus_To_multiclusterdns_MultiClusterServiceDNSRecordStatus(in *MultiClusterServiceDNSRecordStatus, out *multiclusterdns.MultiClusterServiceDNSRecordStatus, s conversion.Scope) error {
	return autoConvert_v1alpha1_MultiClusterServiceDNSRecordStatus_To_multiclusterdns_MultiClusterServiceDNSRecordStatus(in, out, s)
}

func autoConvert_multiclusterdns_MultiClusterServiceDNSRecordStatus_To_v1alpha1_MultiClusterServiceDNSRecordStatus(in *multiclusterdns.MultiClusterServiceDNSRecordStatus, out *MultiClusterServiceDNSRecordStatus, s conversion.Scope) error {
	out.DNS = *(*[]ClusterDNS)(unsafe.Pointer(&in.DNS))
	return nil
}

// Convert_multiclusterdns_MultiClusterServiceDNSRecordStatus_To_v1alpha1_MultiClusterServiceDNSRecordStatus is an autogenerated conversion function.
func Convert_multiclusterdns_MultiClusterServiceDNSRecordStatus_To_v1alpha1_MultiClusterServiceDNSRecordStatus(in *multiclusterdns.MultiClusterServiceDNSRecordStatus, out *MultiClusterServiceDNSRecordStatus, s conversion.Scope) error {
	return autoConvert_multiclusterdns_MultiClusterServiceDNSRecordStatus_To_v1alpha1_MultiClusterServiceDNSRecordStatus(in, out, s)
}

func autoConvert_v1alpha1_MultiClusterServiceDNSRecordStatusStrategy_To_multiclusterdns_MultiClusterServiceDNSRecordStatusStrategy(in *MultiClusterServiceDNSRecordStatusStrategy, out *multiclusterdns.MultiClusterServiceDNSRecordStatusStrategy, s conversion.Scope) error {
	out.DefaultStatusStorageStrategy = in.DefaultStatusStorageStrategy
	return nil
}

// Convert_v1alpha1_MultiClusterServiceDNSRecordStatusStrategy_To_multiclusterdns_MultiClusterServiceDNSRecordStatusStrategy is an autogenerated conversion function.
func Convert_v1alpha1_MultiClusterServiceDNSRecordStatusStrategy_To_multiclusterdns_MultiClusterServiceDNSRecordStatusStrategy(in *MultiClusterServiceDNSRecordStatusStrategy, out *multiclusterdns.MultiClusterServiceDNSRecordStatusStrategy, s conversion.Scope) error {
	return autoConvert_v1alpha1_MultiClusterServiceDNSRecordStatusStrategy_To_multiclusterdns_MultiClusterServiceDNSRecordStatusStrategy(in, out, s)
}

func autoConvert_multiclusterdns_MultiClusterServiceDNSRecordStatusStrategy_To_v1alpha1_MultiClusterServiceDNSRecordStatusStrategy(in *multiclusterdns.MultiClusterServiceDNSRecordStatusStrategy, out *MultiClusterServiceDNSRecordStatusStrategy, s conversion.Scope) error {
	out.DefaultStatusStorageStrategy = in.DefaultStatusStorageStrategy
	return nil
}

// Convert_multiclusterdns_MultiClusterServiceDNSRecordStatusStrategy_To_v1alpha1_MultiClusterServiceDNSRecordStatusStrategy is an autogenerated conversion function.
func Convert_multiclusterdns_MultiClusterServiceDNSRecordStatusStrategy_To_v1alpha1_MultiClusterServiceDNSRecordStatusStrategy(in *multiclusterdns.MultiClusterServiceDNSRecordStatusStrategy, out *MultiClusterServiceDNSRecordStatusStrategy, s conversion.Scope) error {
	return autoConvert_multiclusterdns_MultiClusterServiceDNSRecordStatusStrategy_To_v1alpha1_MultiClusterServiceDNSRecordStatusStrategy(in, out, s)
}

func autoConvert_v1alpha1_MultiClusterServiceDNSRecordStrategy_To_multiclusterdns_MultiClusterServiceDNSRecordStrategy(in *MultiClusterServiceDNSRecordStrategy, out *multiclusterdns.MultiClusterServiceDNSRecordStrategy, s conversion.Scope) error {
	out.DefaultStorageStrategy = in.DefaultStorageStrategy
	return nil
}

// Convert_v1alpha1_MultiClusterServiceDNSRecordStrategy_To_multiclusterdns_MultiClusterServiceDNSRecordStrategy is an autogenerated conversion function.
func Convert_v1alpha1_MultiClusterServiceDNSRecordStrategy_To_multiclusterdns_MultiClusterServiceDNSRecordStrategy(in *MultiClusterServiceDNSRecordStrategy, out *multiclusterdns.MultiClusterServiceDNSRecordStrategy, s conversion.Scope) error {
	return autoConvert_v1alpha1_MultiClusterServiceDNSRecordStrategy_To_multiclusterdns_MultiClusterServiceDNSRecordStrategy(in, out, s)
}

func autoConvert_multiclusterdns_MultiClusterServiceDNSRecordStrategy_To_v1alpha1_MultiClusterServiceDNSRecordStrategy(in *multiclusterdns.MultiClusterServiceDNSRecordStrategy, out *MultiClusterServiceDNSRecordStrategy, s conversion.Scope) error {
	out.DefaultStorageStrategy = in.DefaultStorageStrategy
	return nil
}

// Convert_multiclusterdns_MultiClusterServiceDNSRecordStrategy_To_v1alpha1_MultiClusterServiceDNSRecordStrategy is an autogenerated conversion function.
func Convert_multiclusterdns_MultiClusterServiceDNSRecordStrategy_To_v1alpha1_MultiClusterServiceDNSRecordStrategy(in *multiclusterdns.MultiClusterServiceDNSRecordStrategy, out *MultiClusterServiceDNSRecordStrategy, s conversion.Scope) error {
	return autoConvert_multiclusterdns_MultiClusterServiceDNSRecordStrategy_To_v1alpha1_MultiClusterServiceDNSRecordStrategy(in, out, s)
}
